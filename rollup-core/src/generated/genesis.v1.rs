// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenesisAppState {
    #[prost(string, tag = "1")]
    pub rollup_name: ::prost::alloc::string::String,
    #[prost(uint32, tag = "2")]
    pub sequencer_genesis_block_height: u32,
    #[prost(uint32, tag = "3")]
    pub celestia_genesis_block_height: u32,
    #[prost(uint64, tag = "4")]
    pub celestia_block_variance: u64,
    #[prost(message, repeated, tag = "5")]
    pub accounts: ::prost::alloc::vec::Vec<Account>,
    #[prost(message, repeated, tag = "6")]
    pub bridge_accounts:
        ::prost::alloc::vec::Vec<astria_core::generated::astria::primitive::v1::Address>,
    #[prost(message, optional, tag = "7")]
    pub authority_sudo_address:
        ::core::option::Option<astria_core::generated::astria::primitive::v1::Address>,
}
impl ::prost::Name for GenesisAppState {
    const NAME: &'static str = "GenesisAppState";
    const PACKAGE: &'static str = "genesis.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "genesis.v1.GenesisAppState".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/genesis.v1.GenesisAppState".into()
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Account {
    #[prost(message, optional, tag = "1")]
    pub address: ::core::option::Option<astria_core::generated::astria::primitive::v1::Address>,
    #[prost(message, optional, tag = "2")]
    pub balance: ::core::option::Option<astria_core::generated::astria::primitive::v1::Uint128>,
}
impl ::prost::Name for Account {
    const NAME: &'static str = "Account";
    const PACKAGE: &'static str = "genesis.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "genesis.v1.Account".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/genesis.v1.Account".into()
    }
}
